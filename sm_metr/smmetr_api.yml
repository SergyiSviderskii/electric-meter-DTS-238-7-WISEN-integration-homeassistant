esphome:
  name: smmetr
  name_add_mac_suffix: true
  includes:
    - sm_metr.h

esp8266:
  board: esp01_1m
  restore_from_flash: true
  
  
  
wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  fast_connect: true
  use_address: 192.168.10.3

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
   ssid: !secret wifi_ssid_ap
   password: !secret wifi_password_ap 

# Enable Home Assistant API
api: 

ota:

logger:
  level: DEBUG
  hardware_uart: UART1
  esp8266_store_log_strings_in_flash: false
  
uart:
- tx_pin: 1
  rx_pin: 3
  baud_rate: 9600
  id: uart_bus 
    
time:
- platform: sntp
  id: smmetr_time
  on_time:
    - seconds: 0
      minutes: 0
      hours: 0
      then:
        - lambda: |-
            id(smtime).publish_state(true);
  on_time_sync:
    - then:
        - lambda: |-
            id(smtime).publish_state(true);
            
globals:
- id: my_global_float_staringkWh
  type: float
  restore_value: true
- id: my_global_float_pricekWh
  type: float
  restore_value: true
  
output:
- platform: gpio
  pin: GPIO14
  id: status_gpio14 
  inverted: true 
 
binary_sensor:
- platform: status
  name: "SM Metr Status"
  id: sm_metr_satatus
  on_press:
    then:
      - output.turn_on: status_gpio14
  internal: true

- platform: gpio
  id: total_reset_gpio
  pin:
    number: GPIO13
    mode:
      input: true
      pullup: true
  on_release:
    then:
      - lambda: |-
          read_cycle_number = 9;
          last_sending_timestamp = 0;
          frame_number_inp = 0;
          id(total_reset).publish_state(true);
          id(status_gpio14).turn_off();
  filters:
    - delayed_off: 5s
  internal: true  
  
- platform: template
  name: "Timing info"
  id: timing_info
- platform: template
  id: smtime
  internal: true
  
switch:
- platform: custom
  lambda: |-
    auto metr_detail_sm_metr = new MyCustomSwitch(0);
    App.register_component(metr_detail_sm_metr);
    auto total_sm_metr_reset = new MyCustomSwitch(1);
    App.register_component(total_sm_metr_reset);
    auto power_sm_metr = new MyCustomSwitch(2);
    App.register_component(power_sm_metr);
    auto reset_sm_metr = new MyCustomSwitch(3);
    App.register_component(reset_sm_metr); 
    auto timing_sm_metr = new MyCustomSwitch(4);
    App.register_component(timing_sm_metr);
    auto save_timing = new MyCustomSwitch(5);
    App.register_component(save_timing);
    auto reset_data_timing = new MyCustomSwitch(6);
    App.register_component(reset_data_timing);
    auto setting_sm_metr = new MyCustomSwitch(7);
    App.register_component(setting_sm_metr);
    auto save_protect_price_energy = new MyCustomSwitch(8);
    App.register_component(save_protect_price_energy);    
    auto prepayment_fuction = new MyCustomSwitch(9);
    App.register_component(prepayment_fuction); 
    auto save_prepayment_sm = new MyCustomSwitch(10);
    App.register_component(save_prepayment_sm);   
    return {metr_detail_sm_metr, total_sm_metr_reset, power_sm_metr, reset_sm_metr, timing_sm_metr, save_timing, reset_data_timing, 
    setting_sm_metr, save_protect_price_energy, prepayment_fuction, save_prepayment_sm}; 

  switches:
    - name: "Metr detail sm metr" 
      icon: mdi:form-select 
    - name: "Total sm metr reset"
      id: total_reset
      icon: mdi:tray-remove      
    - name: "Power sm metr"
      id: power
      icon: mdi:power-standby
    - name: "Reset sm metr"
      id: reset
      icon: mdi:tray-remove
    - name: "Timing sm metr"
      id: timing_sm
      icon: mdi:clock-time-three 
    - name: "Save timing"
      id: save_timing
      icon: mdi:tray-arrow-up 
    - name: "Reset data timing"
      id: reset_timing
      icon: mdi:tray-remove
    - name: "Setting sm metr" 
      icon: mdi:cog-refresh
    - name: "Save protec. price energy initial"
      id: save_protect_price_energy_initial
      icon: mdi:tray-arrow-up      
    - name: "Prepayment fuction"  
      id: prepayment_fuction_on_off
    - name: "Save prepayment"
      id: save_prepayment
      icon: mdi:tray-arrow-up
      
- platform: template
  name: "Time ON OFF"
  id: data_time_on_off
  assumed_state: true
  optimistic: true      

        
sensor:
- platform: custom
  lambda: |-
    auto my_custom_sensor = new  MyCustomSensor();
    App.register_component(my_custom_sensor);
    return {my_custom_sensor->import_active_energy, my_custom_sensor->export_active_energy,my_custom_sensor->contract_active_energy, my_custom_sensor->frequency,    
    my_custom_sensor->rms_voltage_phase_a, my_custom_sensor->rms_current_phase_a, my_custom_sensor->rms_active_power_phase_a, my_custom_sensor->rms_reactive_power_phase_a, my_custom_sensor->rms_power_factor_phase_a,
    my_custom_sensor->rms_voltage_phase_b, my_custom_sensor->rms_current_phase_b, my_custom_sensor->rms_active_power_phase_b, my_custom_sensor->rms_reactive_power_phase_b, my_custom_sensor->rms_power_factor_phase_b,
    my_custom_sensor->rms_voltage_phase_c, my_custom_sensor->rms_current_phase_c, my_custom_sensor->rms_active_power_phase_c, my_custom_sensor->rms_reactive_power_phase_c, my_custom_sensor->rms_power_factor_phase_c,
    my_custom_sensor->rms_active_power_g, my_custom_sensor->rms_reactive_power_g, my_custom_sensor->rms_power_factor_g};
    
  sensors:
  
  - name: "Import active energy"
    unit_of_measurement: kWh
    icon: mdi:transmission-tower-import
    accuracy_decimals: 2  
  - name: "Export active energy"
    unit_of_measurement: kWh
    icon: mdi:transmission-tower-export
    accuracy_decimals: 2    
  - name: "Contract active energy"
    unit_of_measurement: kWh
    icon: mdi:transmission-tower
    accuracy_decimals: 2    
  - name: "Frequency"
    unit_of_measurement: Hz
    icon: mdi:cosine-wave
    accuracy_decimals: 2   
    
  - name: "RMS voltage phase a"
    icon: mdi:sine-wave
    unit_of_measurement: V
    accuracy_decimals: 1    
  - name: "RMS current phase a"
    icon: mdi:current-ac
    unit_of_measurement: A
    accuracy_decimals: 3    
  - name: "RMS active power phase a"
    icon: mdi:lightning-bolt-circle
    unit_of_measurement: kW
    accuracy_decimals: 4   
  - name: "RMS reactive power phase a"
    icon: mdi:tailwind 
    unit_of_measurement: kVar
    accuracy_decimals: 4    
  - name: "RMS power factor phase a"
    icon: mdi:pulse
    accuracy_decimals: 3 
    
  - name: "RMS voltage phase b"
    icon: mdi:sine-wave
    unit_of_measurement: V
    accuracy_decimals: 1   
  - name: "RMS current phase b"
    icon: mdi:current-ac
    unit_of_measurement: A
    accuracy_decimals: 3   
  - name: "RMS active power phase b"
    icon: mdi:lightning-bolt-circle
    unit_of_measurement: kW
    accuracy_decimals: 4    
  - name: "RMS reactive power phase b"
    icon: mdi:tailwind 
    unit_of_measurement: kVar
    accuracy_decimals: 4    
  - name: "RMS power factor phase b"
    icon: mdi:pulse
    accuracy_decimals: 3  
    
  - name: "RMS voltage phase c"
    icon: mdi:sine-wave
    unit_of_measurement: V
    accuracy_decimals: 1   
  - name: "RMS current phase c"
    icon: mdi:current-ac
    unit_of_measurement: A
    accuracy_decimals: 3    
  - name: "RMS active power phase c"
    icon: mdi:lightning-bolt-circle
    unit_of_measurement: kW
    accuracy_decimals: 4   
  - name: "RMS reactive power phase c"
    icon: mdi:tailwind 
    unit_of_measurement: kVar
    accuracy_decimals: 4    
  - name: "RMS power factor phase c"
    icon: mdi:pulse
    accuracy_decimals: 3    
    
  - name: "RMS active power group"
    icon: mdi:lightning-bolt-circle
    unit_of_measurement: kW
    accuracy_decimals: 4
  - name: "RMS reactive power group"
    icon: mdi:tailwind 
    unit_of_measurement: kVar
    accuracy_decimals: 4   
  - name: "RMS power factor group"
    icon: mdi:pulse
    accuracy_decimals: 3

- platform: template    
  name: "Total active energy"
  id: total_active_energy
  icon: mdi:home-lightning-bolt
  unit_of_measurement: kWh
  accuracy_decimals: 2    
  update_interval: 600s
- platform: template    
  name: "Total active power"
  id: total_active_power
  icon: mdi:lightning-bolt-outline
  unit_of_measurement: kW
  accuracy_decimals: 4      
  update_interval: 600s
- platform: template  
  name: "Hour"
  id: data_time_hour
  icon: mdi:clock-time-three
  unit_of_measurement: h
  accuracy_decimals: 0 
  update_interval: 600s
- platform: template  
  name: "Minute"
  id: data_time_minute
  icon: mdi:clock-time-three
  unit_of_measurement: m
  accuracy_decimals: 0
  update_interval: 600s

- platform: template
  name: "Purchase value"
  id: prepayment_purchase_value
  icon:  mdi:currency-usd
  accuracy_decimals: 2
  update_interval: 600s
- platform: template  
  name: "Seiting balance kWh"
  id: prepayment_purchases_seiting_balance_kWh
  icon: mdi:transmission-tower-import
  unit_of_measurement: kWv
  accuracy_decimals: 2
  update_interval: 600s
    
- platform: wifi_signal
  name: "WiFi Signal SM Metr "
  update_interval: 600s    

text_sensor:
- platform: template
  name: "Week"
  id: data_time_week
  icon: mdi:calendar-month-outline
  update_interval: 600s
- platform: template
  name: "ON/OFF Timing"
  id: data_time_onoff 
  icon: mdi:power
  update_interval: 600s  
  
number:
- platform: template
  name: "Data time h"
  icon: mdi:clock-time-three
  id: day_time_h
  optimistic: true
  min_value: 0
  max_value: 23
  step: 1     
- platform: template
  name: "Data time m"
  icon: mdi:clock-time-three
  id: day_time_m
  optimistic: true
  min_value: 0
  max_value: 59
  step: 1
- platform: template
  name: "Day of week"
  icon: mdi:calendar-month-outline
  id: day_week
  optimistic: true
  min_value: 0
  max_value: 7
  step: 1

- platform: template
  name: "Voltage high limit input"
  icon: mdi:sine-wave
  id: voltage_high_limit
  optimistic: true
  min_value: 240
  max_value: 275
  step: 1  
- platform: template
  name: "Voltage low limit input"
  icon: mdi:sine-wave
  id: voltage_low_limit
  optimistic: true
  min_value: 175
  max_value: 195
  step: 1
- platform: template
  name: "Current high limit input"
  icon: mdi:current-ac
  id: current_high_limit
  optimistic: true
  min_value: 10
  max_value: 100.00
  step: .01 
- platform: template
  name: "Staring kWh value of metr input"
  icon: mdi:transmission-tower-import
  id: staring_kWh_value_of_metr
  optimistic: true
  min_value: 0
  max_value: 999999.99
  step: 0.01
- platform: template
  name: "Metr price input"
  icon: mdi:currency-usd
  id: metr_price
  optimistic: true
  min_value: 0
  max_value: 5
  step: 0.01
  
- platform: template
  name: "Purchase kWh"
  icon: mdi:transmission-tower-import
  id: prepayment_purchase_kWh
  optimistic: true
  min_value: 0
  max_value: 999999.99
  step: 0.01
- platform: template
  name: "Seiting balance alarm kWh"
  icon: mdi:transmission-tower-off
  id: prepayment_purchases_seiting_balance_alarm_kWh
  optimistic: true
  min_value: 0
  max_value: 999999.99
  step: 0.01

custom_component:
    id: sm_metr
    lambda: |-
      auto my_custom = new SMComponent(id(uart_bus));
      return {my_custom};  